syntax = "proto3";
package blognitum.blognitum;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "blognitum/blognitum/params.proto";
import "blognitum/blognitum/post.proto";
import "blognitum/blognitum/comment.proto";
// this line is used by starport scaffolding # 1

option go_package = "blognitum/x/blognitum/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/blognitum/blognitum/params";
  }
  // Queries a list of Posts items.
	rpc Posts(QueryPostsRequest) returns (QueryPostsResponse) {
		option (google.api.http).get = "/blognitum/blognitum/posts";
	}

// Queries a Comment by id.
	rpc Comment(QueryGetCommentRequest) returns (QueryGetCommentResponse) {
		option (google.api.http).get = "/blognitum/blognitum/comment/{id}";
	}

	// Queries a list of Comment items.
	rpc CommentAll(QueryAllCommentRequest) returns (QueryAllCommentResponse) {
		option (google.api.http).get = "/blognitum/blognitum/comment";
	}

// Queries a list of Comments items.
	rpc Comments(QueryCommentsRequest) returns (QueryCommentsResponse) {
		option (google.api.http).get = "/blognitum/blognitum/comments/{id}";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryPostsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryPostsResponse {
  //string title = 1;
  //string body = 2;
  repeated Post Post = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetCommentRequest {
	uint64 id = 1;
}

message QueryGetCommentResponse {
	Comment Comment = 1 [(gogoproto.nullable) = false];
}

message QueryAllCommentRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCommentResponse {
	repeated Comment Comment = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryCommentsRequest {
  uint64 id = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryCommentsResponse {
  Post Post = 1;
  // Returning a list of comments
  repeated Comment Comment = 2;
  // Adding pagination to response
  cosmos.base.query.v1beta1.PageResponse pagination = 3;
}

// this line is used by starport scaffolding # 3
